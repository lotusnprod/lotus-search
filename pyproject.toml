[project]
name = "lotus_search"
version = "0.1.2"
description = "Lotus Search"
authors = [
    {name = "Jonathan Bisson", email = "bjonnh-git@bjonnh.net"},
    {name = "Adriano Rutz", email = "adafede@gmail.com"},
]
requires-python = ">=3.13.0,<4.0.0"
keywords = [
    "LinkedOpenData",
    "LOTUS",
    "Wikidata",
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Framework :: Pytest",
    "Framework :: tox",
    "Framework :: Sphinx",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
]
license = {text = "LICENSE"}
readme = "README.md"


dependencies = [
    "dash<4.0.0,>=3.2.0",
    "dash-bootstrap-components<3.0.0,>=2.0.3",
    "fastapi<1.0.0,>=0.116.1",
    "fastapi-versioning<1.0.0,>=0.10.0",
    "flask-caching<3.0.0,>=2.3.1",
    "gunicorn<24.0.0,>=23.0.0",
    "numpy<3.0.0,>=2.3.2",
    "orjson<4.0.0,>=3.10.18",
    "pandas<3.0.0,>=2.3.0",
    "pydantic<3.0.0,>=2.10.5",
    "requests<3.0.0,>=2.32.3",
    "rdkit<2026.0.0,>=2025.3.5",
    "sqlalchemy<3.0.0,>=2.0.42",
    "tqdm<5.0.0,>=4.67.1",
    "uvicorn<1.0.0,>=0.35.0",
]

[dependency-groups]
dev = [
    "black<26.0.0,>=25.1.0",
    "coverage<8.0.0,>=7.9.2",
    "deptry<1.0.0,>=0.23.0",
    "isort<7.0.0,>=6.0.1",
    "mypy<2.0.0,>=1.17.1",
    "pre-commit<5.0.0,>=4.2.0",
    "pytest<9.0.0,>=8.4.1",
    "pytest-asyncio<2.0.0,>=1.1.0",
    "pytest-cov<7.0.0,>=6.2.1",
    "pytest-mock<4.0.0,>=3.14.1",
    "pytest-xdist<4.0.0,>=3.8.0",
    "requests-mock<2.0.0,>=1.12.1",
    "tox<5.0.0,>=4.27.0",
]

[project.scripts]
start = "app:main"

[project.urls]
homepage = "https://search.nprod.net"
repository = "https://github.com/lotusnprod/lotus-search"
documentation = "https://github.com/lotusnprod/lotus-search"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.mypy]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.ruff]
target-version = "py313"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
